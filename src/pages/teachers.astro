---
import ContentLayout from "@layouts/ContentLayout.astro";
import teachersData from "@data/teachers.json";
import defaultProfile from "@assets/images/fallback_profile.png";
import { Image } from "astro:assets";
import "@style/style.css";

function getDeparments() {
    const unique: { [index: string]: string } = {};
    teachersData.forEach((teacher) => {
        unique[teacher.branch] = "";
    });
    return Object.keys(unique);
}

const deparments = getDeparments();
---

<ContentLayout  title="teachers|nmamitloop">
    <main>
        <div>
            <input type="search" id="teacher-search" />
        </div>

        <section>
            <fieldset class="branch-selector">
                <legend>deparment</legend>
                <span class="option" data-value="all"> All</span>
                {
                    deparments.map((deparment) => {
                        return (
                            <span class="option" data-value={deparment}>
                                {deparment}
                            </span>
                        );
                    })
                }
            </fieldset>
        </section>
        <ul>
            {
                teachersData.map((teacher) => {
                    return (
                        <li class="teacher-card">
                            {teacher.imgUrl ? (
                                <Image
                                    src={teacher.imgUrl}
                                    alt={teacher.name}
                                    width={100}
                                    height={100}
                                    format="webp"
                                    loading="lazy"
                                />
                            ) : (
                                <Image
                                    src={defaultProfile}
                                    alt={teacher.name}
                                    width={100}
                                    height={100}
                                    format="webp"
                                    loading="lazy"
                                />
                            )}
                            <div class="detail">
                                <h4 class="name">{teacher.name}</h4>
                                <span class="branch">{teacher.branch}</span>
                                <span>{teacher.block}</span>
                                <span>{teacher.floor}</span>
                            </div>
                        </li>
                    );
                })
            }
        </ul>
    </main>
</ContentLayout>

<style>
    .teacher-card {
        height: 8rem;
        padding: 0.5rem 1rem;
        display: flex;
        flex-direction: row;
        gap: 2rem;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.158);
        border-radius: 5px;
    }

    .teacher-card img {
        height: 100px;
        aspect-ratio: 1;
        border-radius: 50%;
        object-fit: cover;
        object-position: center;
    }

    .teacher-card .detail span {
        padding-right: 0.5rem;
    }

    .hidden {
        display: none;
    }
</style>

<script >
    const teacherSearchBar = document.getElementById(
        "teacher-search",
    ) as HTMLInputElement;
    const teacherList = document.querySelectorAll(".teacher-card");
    const branchList = document.querySelectorAll(".option");
    let branchSelected: string | null = "all";
    let searchString: string | null = "";

    teacherSearchBar.addEventListener("input", (event) => {
        const searchString = teacherSearchBar.value.trim();
        teacherList.forEach((content) => {
            const name = content
                .querySelector(".name")
                ?.textContent?.toLocaleLowerCase() as string;
            if (name.match(searchString)) content.classList.remove("hidden");
            else content.classList.add("hidden");
        });
    });

    branchList.forEach((ele) => {
        ele.addEventListener("click", (event) => {
            if (event !== null && event.target instanceof HTMLElement) {
                branchSelected = ele.getAttribute("data-value");
                updateUI();
            }
        });
    });

    function updateUI() {
        branchList.forEach((ele) => {
            if (branchSelected == ele.getAttribute("data-value")) {
                ele.classList.add("selected");
            } else ele.classList.remove("selected");
        });

        teacherList.forEach((teacher) => {
            const branch = teacher.querySelector(".branch")?.textContent;
            if (branchSelected != "all" && branchSelected != branch) {
                teacher.classList.add("hidden");
                return;
            }

            if (searchString) {
                const name = teacher.querySelector(".name")?.textContent;
                if (name?.match(searchString)) {
                    teacher.classList.add("hidden");
                    return;
                }
            }
            teacher.classList.remove("hidden");
        });
    }

    updateUI();

    function sayhello() {
        console.log("hello")
    }
</script>
